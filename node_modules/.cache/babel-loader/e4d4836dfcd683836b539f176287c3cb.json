{"remainingRequest":"/Users/K/Desktop/test/vue-test/node_modules/babel-loader/lib/index.js!/Users/K/Desktop/test/vue-test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/K/Desktop/test/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/K/Desktop/test/vue-test/src/views/TestChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/K/Desktop/test/vue-test/src/views/TestChart.vue","mtime":1645286834187},{"path":"/Users/K/Desktop/test/vue-test/babel.config.js","mtime":1645078991417},{"path":"/Users/K/Desktop/test/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1645078986592},{"path":"/Users/K/Desktop/test/vue-test/node_modules/babel-loader/lib/index.js","mtime":1645078986901},{"path":"/Users/K/Desktop/test/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1645078986592},{"path":"/Users/K/Desktop/test/vue-test/node_modules/vue-loader/lib/index.js","mtime":1645078986980}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA;AACA;AAEA;AACAA,mBADA;AAEAC;AACA;AACAC,sBAFA;AAGAC,wBAHA;AAIAC,sBAJA;AAKAC,gCALA;AAMAC;AANA,GAFA;AAUA;AACAC,MAXA,kBAWA;AACA;AACAC,+BADA;AAEA;AACAC,aAHA;AAIAC,sBAJA;AAMAC,kBANA;AAQA;AACAC,cATA;AAUAC,uBAVA;AAWA;AACAC,aAZA;AAaAC,sBAbA;AAeA;AACAC,sBAhBA;AAkBA;AACAC,kBAnBA;AAoBAC,0BApBA;AAsBA;AACAC,gBAvBA;AAyBA;AACAC;AACAC,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAC,mBADA;AAEAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAFA;AAgBAiB;AAhBA,SADA;AAfA,OA1BA;AA8DAC;AACAF,iBADA;AAEAC,2BAFA;AAGAE;AACAC,gBADA;AAEAC,kBAFA;AAGAC;AAHA;AAHA;AA9DA;AAwEA,GApFA;AAqFA;AACAC,SAtFA,qBAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA9FA;AA+FA;AACAC;AACA;AACAC,iBAFA,2BAEA;AACA;AACAX,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAC,wBADA;AAEAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAFA;AAgBAiB;AAhBA,SADA;AAfA;AAoCA,KAvCA;AAuCA;AACAS,qBAxCA,+BAwCA;AACA;AACAZ,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAY,sBADA;AAEAX,qBAFA;AAGAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAHA;AAiBA4B,+CAjBA;AAkBA;AACAC;AAnBA,SADA,EAsBA;AACAb,qBADA;AAEAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAFA;AAgBAiB;AAhBA,SAtBA;AAfA;AAyDA,KAlGA;AAmGA;AACAa,kBApGA,4BAoGA;AACA;AACAhB,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAC,qBADA;AAEAhB,iBACA,mBADA,EAEA,IAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAFA;AAgBA4B,0CAhBA;AAiBAX,qDAjBA;AAkBAc,iDAlBA;AAmBAC,oDAnBA;AAoBAC,+DApBA;AAqBAC;AArBA,SADA,EAwBA;AACAlB,sBADA;AAEAhB,gEAFA;AAGA4B,0CAHA;AAIAX,0CAJA;AAKAc,mDALA;AAMAI,wBANA;AAOAH,oDAPA;AAQAC,oDARA;AASAC;AATA,SAxBA;AAfA;AAoDA;AACAE;AACAC,kBACA;AACAC;AACAC,2BADA;AAEAC;AAFA;AADA,WADA,CADA;AASAC,kBACA;AACAC;AACAC,+BADA;AAEAC;AAFA;AADA,WADA;AATA,SADA;AAmBAC;AACAxC,iBACA;AADA;AADA;AAnBA;AAyBA,KAlLA;AAmLA;AACAyC,0BApLA,oCAoLA;AACA;AACAhC,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAC,8CADA;AAEAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAFA;AAgBAiB,kEAhBA;AAiBAW,oNAjBA;AAkBAmB;AAlBA,SADA;AAfA;AAsCA,KA3NA;AA4NA;AACAC,iBA7NA,2BA6NA;AACA;AACAlC,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAC,wBADA;AAEAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,mBANA,EAOA,mBAPA,EAQA,mBARA,EASA,mBATA,EAUA,mBAVA,EAWA,mBAXA,EAYA,mBAZA,CAFA;AAgBAiB;AAhBA,SADA;AAfA;AAoCA,KAlQA;AAmQA;AACAgC,sBApQA,gCAoQA;AACA;AACAnC,oCADA;AAEAC,mBACA;AACAC,wBADA;AAEAhB,iBACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,CAFA;AAQAiB;AARA,SADA;AAFA,SAeA;AACAiC;AADA,OAfA;AAkBA,KAvRA;AAwRA;AACAC,oBAzRA,8BAyRA;AACA;AACArC,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACAC,wBADA;AAEAhB,iBACA;AACAoD,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WADA,EAMA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WANA,EAWA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WAXA,EAgBA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WAhBA,EAqBA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WArBA,EA0BA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WA1BA,EA+BA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WA/BA,EAoCA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WApCA,EAyCA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WAzCA,EA8CA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WA9CA,EAmDA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WAnDA,EAwDA;AACAF,kCADA;AAEAC,kCAFA;AAGAC;AAHA,WAxDA,CAFA;AAgEArC;AAhEA,SADA;AAfA;AAoFA,KA9WA;AA+WA;AACAsC,yBAhXA,mCAgXA;AACA;AACAzC,iBACA,SADA,EAEA,UAFA,EAGA,OAHA,EAIA,OAJA,EAKA,KALA,EAMA,MANA,EAOA,MAPA,EAQA,QARA,EASA,WATA,EAUA,SAVA,EAWA,UAXA,EAYA,UAZA,CADA;AAeAC,mBACA;AACA;AACAc,wBADA;AACA;AACAb,sBAFA;AAGAhB,iBACA,sBADA,EAEA,sBAFA,EAGA,sBAHA,EAIA,sBAJA,EAKA,sBALA,EAMA,sBANA,EAOA,sBAPA,EAQA,sBARA,EASA,sBATA,EAUA,sBAVA,EAWA,sBAXA,EAYA,sBAZA,CAHA;AAiBAwD,wBAjBA;AAkBA5B,2CAlBA;AAkBA;AACAX;AAnBA,SAFA,EAuBA;AACA;AACAY,iBADA;AACA;AACAb,sBAFA;AAGAhB,iBACA,uBADA,EAEA,uBAFA,EAGA,uBAHA,EAIA,uBAJA,EAKA,uBALA,EAMA,uBANA,EAOA,uBAPA,EAQA,uBARA,EASA,uBATA,EAUA,uBAVA,EAWA,uBAXA,EAYA,uBAZA,CAHA;AAiBAwD,wBAjBA;AAkBA5B,2CAlBA;AAkBA;AACAX;AAnBA,SAxBA,EA6CA;AACA;AACAY,iBADA;AACA;AACAb,sBAFA;AAGAhB,iBACA,uBADA,EAEA,uBAFA,EAGA,uBAHA,EAIA,uBAJA,EAKA,uBALA,EAMA,uBANA,EAOA,uBAPA,EAQA,uBARA,EASA,uBATA,EAUA,uBAVA,EAWA,uBAXA,EAYA,uBAZA,CAHA;AAiBAwD,wBAjBA;AAkBA5B,0CAlBA;AAkBA;AACAX;AAnBA,SA9CA;AAfA;AAoFA,KArcA;AAscA;AACA;AACAwC,gBAxcA,0BAwcA;AACA;AACA,KA1cA;AA2cA;AACA;AACAC,kBA7cA,0BA6cAC,CA7cA,EA6cA;AACA;AACA;AA/cA;AAhGA","names":["name","components","BarChart","LineChart","PieChart","DoughnutChart","BubbleChart","data","mess","bar","bar_opitions","bar_line","line","line_opitions","pie","pie_opitions","surface_line","doughnut","doughnut_options","bubble","original_datasets","labels","datasets","label","backgroundColor","original_prop_data","backgroundColor01","red","green","blue","mounted","methods","updateBarData","updateBarlineData","type","borderColor","fill","updateLineData","pointBackgroundColor","pointHoverBorderColor","pointHoverBackgroundColor","spanGaps","pointRadius","scales","xAxes","scaleLabel","display","labelString","yAxes","ticks","beginAtZero","stepSize","elements","updateOriginalLineData","borderWidth","updatePieData","updateDoughnutData","animation","updateBubbleData","x","y","r","updateSurfaceLineData","lineTension","getRandomInt","getRandomInt02","b"],"sourceRoot":"src/views","sources":["TestChart.vue"],"sourcesContent":["<template>\n  <div class=\"testChart\">\n    <br /><br /><br />\n    <h2>{{ mess }}</h2>\n\n    <div class=\"graph\">\n      <line-chart :chartData=\"line\" :options=\"line_opitions\" />\n      <button @click=\"updateLineData()\">line Update</button>\n    </div>\n    <div class=\"graph\">\n      <line-chart :chartData=\"surface_line\" />\n      <button @click=\"updateSurfaceLineData()\">pie Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <bar-chart :chartData=\"bar\" />\n      <button @click=\"updateBarData()\">bar Update</button>\n    </div>\n    <div class=\"graph\">\n      <bar-chart :chartData=\"bar_line\" />\n      <button @click=\"updateBarlineData()\">bar_line Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <pie-chart :chartData=\"pie\" />\n      <button @click=\"updatePieData()\">pie Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <doughnut-chart :chartData=\"doughnut\" :options=\"doughnut_options\" />\n      <button @click=\"updateDoughnutData()\">doughnut Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <bubble-chart :chartData=\"bubble\" />\n      <button @click=\"updateBubbleData()\">bubble Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <b-input-group prepend=\"Label\" class=\"mt-3\">\n        <b-form-input v-model=\"original_prop_data.label\"></b-form-input>\n      </b-input-group>\n      <b-input-group prepend=\"Color\" class=\"mt-3\">\n        <b-form-input\n          v-model=\"original_prop_data.backgroundColor01.red\"\n        ></b-form-input>\n        <b-form-input\n          v-model=\"original_prop_data.backgroundColor01.green\"\n        ></b-form-input>\n        <b-form-input\n          v-model=\"original_prop_data.backgroundColor01.blue\"\n        ></b-form-input>\n        <input\n          type=\"color\"\n          v-model=\"original_prop_data.backgroundColor\"\n          class=\"mt-3\"\n        />\n      </b-input-group>\n      <b-input-group prepend=\"0\" append=\"255\" class=\"mt-3\">\n        <b-form-input\n          type=\"range\"\n          min=\"0\"\n          max=\"255\"\n          v-model=\"original_prop_data.backgroundColor01.red\"\n        ></b-form-input>\n        <b-form-input\n          type=\"range\"\n          min=\"0\"\n          max=\"255\"\n          v-model=\"original_prop_data.backgroundColor01.green\"\n        ></b-form-input>\n        <b-form-input\n          type=\"range\"\n          min=\"0\"\n          max=\"255\"\n          v-model=\"original_prop_data.backgroundColor01.blue\"\n        ></b-form-input>\n      </b-input-group>\n      <br />\n      <button @click=\"updateOriginalLineData()\">bar_line Update</button>\n      <div class=\"graph\">\n        <bar-chart :chartData=\"original_datasets\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n.testChart {\n  display: flex;\n  flex-wrap: wrap;\n}\n.graph {\n  max-width: 400px;\n  margin: 10%;\n  padding: auto;\n}\n</style>\n \n \n<script>\nimport BarChart from \"@/components/ChartBar.vue\";\nimport LineChart from \"@/components/ChartLine.vue\";\nimport PieChart from \"@/components/ChartPie.vue\";\nimport DoughnutChart from \"@/components/ChartDoughnut.vue\";\nimport BubbleChart from \"@/components/ChartBubble.vue\";\n\nexport default {\n  name: \"testChart\",\n  components: {\n    // RandomLineChart,\n    BarChart,\n    LineChart,\n    PieChart,\n    DoughnutChart,\n    BubbleChart,\n  },\n  // =====================================================\n  data() {\n    return {\n      mess: \"Chart.js Tutorial\",\n      // ChartBar\n      bar: {},\n      bar_opitions: {},\n\n      bar_line: {},\n\n      // ChartLine\n      line: {},\n      line_opitions: {},\n      // ChartPie\n      pie: {},\n      pie_opitions: {},\n\n      // surface_line\n      surface_line: {},\n\n      // Doughnut\n      doughnut: {},\n      doughnut_options: {},\n\n      // BubbleChart\n      bubble: {},\n\n      // original graph\n      original_datasets: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"#000000\",\n          },\n        ],\n      },\n      original_prop_data: {\n        label: \"\",\n        backgroundColor: \"\",\n        backgroundColor01: {\n          red: 0,\n          green: 0,\n          blue: 0,\n        },\n      },\n    };\n  },\n  // =====================================================\n  mounted() {\n    this.updateBarData();\n    this.updateLineData();\n    this.updateBarlineData();\n    this.updatePieData();\n    this.updateDoughnutData();\n    this.updateSurfaceLineData();\n    this.updateBubbleData();\n  },\n  // =====================================================\n  methods: {\n    // ************************************\n    updateBarData() {\n      this.bar = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"rgba(255, 99, 132, 0.8)\",\n          },\n        ],\n      };\n    }, // ************************************\n    updateBarlineData() {\n      this.bar_line = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            type: \"line\",\n            label: \"予算\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            borderColor: \"rgba(0, 191, 255, 0.5)\",\n            // tension: 0,\n            fill: false,\n          },\n          {\n            label: \"売上\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"rgba(255, 228, 181, 0.5)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateLineData() {\n      this.line = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"潮位\",\n            data: [\n              this.getRandomInt(),\n              null,\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            borderColor: \"rgba(0, 191, 255)\",\n            backgroundColor: \"rgba(224, 255, 255, 0.5)\",\n            pointBackgroundColor: \"rgba(0, 0, 240)\",\n            pointHoverBorderColor: \"rgba(0, 191, 255)\",\n            pointHoverBackgroundColor: \"rgba(224, 255, 255, 0.5)\",\n            spanGaps: true,\n          },\n          {\n            label: \"海苔網\",\n            data: [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n            borderColor: \"rgba(50, 205, 50)\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            pointBackgroundColor: \"rgba(50, 205, 50)\",\n            pointRadius: 0,\n            pointHoverBorderColor: \"rgba(50, 205, 50)\",\n            pointHoverBackgroundColor: \"rgba(0,0,0,0)\",\n            spanGaps: true,\n          },\n        ],\n      };\n      this.line_opitions = {\n        scales: {\n          xAxes: [\n            {\n              scaleLabel: {\n                display: true,\n                labelString: \"Month\",\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 10,\n              },\n            },\n          ],\n        },\n        elements: {\n          line: {\n            // tension: 0, // ベジェ曲線を無効にする\n          },\n        },\n      };\n    },\n    // ************************************\n    updateOriginalLineData() {\n      this.original_datasets = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: this.original_prop_data.label,\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: this.original_prop_data.backgroundColor,\n            borderColor: `rgba(${this.original_prop_data.backgroundColor01.red}, ${this.original_prop_data.backgroundColor01.green}, ${this.original_prop_data.backgroundColor01.blue})`,\n            borderWidth: 3,\n          },\n        ],\n      };\n    },\n    // ************************************\n    updatePieData() {\n      this.pie = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"rgba(255, 99, 132, 0.8)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateDoughnutData() {\n      (this.doughnut = {\n        labels: [\"A\", \"B\", \"C\", \"D\"],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: [\"orange\", \"skyblue\", \"yellow\", \"hotpink\"],\n          },\n        ],\n      }),\n        (this.doughnut_options = {\n          animation: {},\n        });\n    },\n    // ************************************\n    updateBubbleData() {\n      this.bubble = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n            ],\n            backgroundColor: \"rgba(255, 99, 132, 0.8)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateSurfaceLineData() {\n      this.surface_line = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          //データセット0 設定\n          {\n            fill: \"origin\", //'origin'まで塗る\n            label: \"商品A\",\n            data: [\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n            ],\n            lineTension: 0,\n            borderColor: \"rgba(199,21,133,1)\", //ミディアムバイオレット\n            backgroundColor: \"rgba(199,21,133,0.5)\",\n          },\n          // データセット1 設定\n          {\n            fill: 0, // データセット0まで塗る\n            label: \"商品B\",\n            data: [\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n            ],\n            lineTension: 0,\n            borderColor: \"rgba(255,243,82,1)\", //レモンイエロー\n            backgroundColor: \"rgba(255,243,82,0.5)\",\n          },\n          // データセット2 設定\n          {\n            fill: 1, // データセット1sまで塗る\n            label: \"商品C\",\n            data: [\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n            ],\n            lineTension: 0,\n            borderColor: \"rgba(0,172,154,1)\", //ペパーミントグリーン\n            backgroundColor: \"rgba(0,172,154,0.5)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    // 乱数生成\n    getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    },\n    // ************************************\n    // 乱数生成\n    getRandomInt02(b) {\n      return Math.floor(Math.random() * 10) + b;\n    },\n  },\n};\n</script>"]}]}