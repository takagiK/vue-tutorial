{"remainingRequest":"/Users/K/Desktop/test/vue-test/node_modules/babel-loader/lib/index.js!/Users/K/Desktop/test/vue-test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/K/Desktop/test/vue-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/K/Desktop/test/vue-test/src/views/TestChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/K/Desktop/test/vue-test/src/views/TestChart.vue","mtime":1645284812597},{"path":"/Users/K/Desktop/test/vue-test/babel.config.js","mtime":1645078991417},{"path":"/Users/K/Desktop/test/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1645078986592},{"path":"/Users/K/Desktop/test/vue-test/node_modules/babel-loader/lib/index.js","mtime":1645078986901},{"path":"/Users/K/Desktop/test/vue-test/node_modules/cache-loader/dist/cjs.js","mtime":1645078986592},{"path":"/Users/K/Desktop/test/vue-test/node_modules/vue-loader/lib/index.js","mtime":1645078986980}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","RandomLineChart","BarChart","LineChart","PieChart","DoughnutChart","BubbleChart","data","mess","test_chart01","datacollection","options","scales","xAxes","scaleLabel","display","labelString","yAxes","id","ticks","max","min","stepSize","bar","bar_opitions","bar_line","line","line_opitions","pie","pie_opitions","surface_line","doughnut","doughnut_options","bubble","original_datasets","labels","datasets","label","backgroundColor","original_prop_data","backgroundColor01","red","green","blue","ob_json","x","y","line_ob_options","line_ob","begin_time","end_time","mounted","methods","fillData","yAxisID","updateBarData","updateBarlineData","type","borderColor","fill","updateLineData","pointBackgroundColor","pointHoverBorderColor","pointHoverBackgroundColor","spanGaps","pointRadius","beginAtZero","elements","updateOriginalLineData","borderWidth","updatePieData","updateDoughnutData","animation","updateBubbleData","r","updateSurfaceLineData","lineTension","updateLineObData","console","legend","time","parser","unit","displayFormats","title","text","getRandomInt","getRandomInt02","b"],"sourceRoot":"src/views","sources":["TestChart.vue"],"sourcesContent":["<template>\n  <div class=\"testChart\">\n    <br />\n    <br />\n    <br />\n    <h2>{{ mess }}</h2>\n\n    <div class=\"graph\">\n      <random-line-chart\n        :chart-data=\"test_chart01.datacollection\"\n        :options=\"test_chart01.options\"\n      ></random-line-chart>\n      <button @click=\"fillData()\">Randomize</button>\n    </div>\n\n    <div class=\"graph\">\n      <line-chart :chartData=\"line\" :options=\"line_opitions\" />\n      <button @click=\"updateLineData()\">line Update</button>\n    </div>\n    <div class=\"graph\">\n      <line-chart :chartData=\"surface_line\" />\n      <button @click=\"updateSurfaceLineData()\">pie Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <bar-chart :chartData=\"bar\" />\n      <button @click=\"updateBarData()\">bar Update</button>\n    </div>\n    <div class=\"graph\">\n      <bar-chart :chartData=\"bar_line\" />\n      <button @click=\"updateBarlineData()\">bar_line Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <pie-chart :chartData=\"pie\" />\n      <button @click=\"updatePieData()\">pie Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <doughnut-chart :chartData=\"doughnut\" :options=\"doughnut_options\" />\n      <button @click=\"updateDoughnutData()\">doughnut Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <bubble-chart :chartData=\"bubble\" />\n      <button @click=\"updateBubbleData()\">bubble Update</button>\n    </div>\n\n    <div class=\"graph\">\n      <b-input-group prepend=\"Label\" class=\"mt-3\">\n        <b-form-input v-model=\"original_prop_data.label\"></b-form-input>\n      </b-input-group>\n      <b-input-group prepend=\"Color\" class=\"mt-3\">\n        <b-form-input\n          v-model=\"original_prop_data.backgroundColor01.red\"\n        ></b-form-input>\n        <b-form-input\n          v-model=\"original_prop_data.backgroundColor01.green\"\n        ></b-form-input>\n        <b-form-input\n          v-model=\"original_prop_data.backgroundColor01.blue\"\n        ></b-form-input>\n        <input\n          type=\"color\"\n          v-model=\"original_prop_data.backgroundColor\"\n          class=\"mt-3\"\n        />\n      </b-input-group>\n      <b-input-group prepend=\"0\" append=\"255\" class=\"mt-3\">\n        <b-form-input\n          type=\"range\"\n          min=\"0\"\n          max=\"255\"\n          v-model=\"original_prop_data.backgroundColor01.red\"\n        ></b-form-input>\n        <b-form-input\n          type=\"range\"\n          min=\"0\"\n          max=\"255\"\n          v-model=\"original_prop_data.backgroundColor01.green\"\n        ></b-form-input>\n        <b-form-input\n          type=\"range\"\n          min=\"0\"\n          max=\"255\"\n          v-model=\"original_prop_data.backgroundColor01.blue\"\n        ></b-form-input>\n      </b-input-group>\n      <br />\n      <button @click=\"updateOriginalLineData()\">bar_line Update</button>\n      <div class=\"graph\">\n        <bar-chart :chartData=\"original_datasets\" />\n      </div>\n    </div>\n\n    <div class=\"graph\">\n        <div>\n            描画範囲\n            <b-form-timepicker v-model=\"begin_time\" locale=\"en\"></b-form-timepicker>\n            <b-form-timepicker v-model=\"end_time\" locale=\"en\"></b-form-timepicker>\n        </div>\n        <line-chart :chartData=\"line_ob\" :options=\"line_ob_options\" />\n        <button @click=\"updateLineObData()\">Ob Update</button>\n    </div>\n  </div>\n</template>\n\n<style>\n.testChart {\n  display: flex;\n  flex-wrap: wrap;\n}\n.graph {\n  max-width: 400px;\n  margin: 10%;\n  padding: auto;\n}\n</style>\n \n \n<script>\nimport RandomLineChart from \"@/components/testChart01.vue\";\nimport BarChart from \"@/components/ChartBar.vue\";\nimport LineChart from \"@/components/ChartLine.vue\";\nimport PieChart from \"@/components/ChartPie.vue\";\nimport DoughnutChart from \"@/components/ChartDoughnut.vue\";\nimport BubbleChart from \"@/components/ChartBubble.vue\";\n\nexport default {\n  name: \"testChart\",\n  components: {\n    RandomLineChart,\n    BarChart,\n    LineChart,\n    PieChart,\n    DoughnutChart,\n    BubbleChart,\n  },\n  // =====================================================\n  data() {\n    return {\n      mess: \"Chart.js Tutorial\",\n      //\n      test_chart01: {\n        datacollection: null,\n        options: {\n          scales: {\n            xAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: \"Month\",\n                },\n              },\n            ],\n            yAxes: [\n              {\n                id: \"y-axis-1\",\n                ticks: {\n                  max: 215,\n                  min: 195,\n                  stepSize: 10,\n                },\n              },\n              {\n                id: \"y-axis-2\",\n                ticks: {\n                  max: 50,\n                  min: 0,\n                  stepSize: 10,\n                },\n              },\n            ],\n          },\n        },\n      },\n      // ChartBar\n      bar: {},\n      bar_opitions: {},\n\n      bar_line: {},\n\n      // ChartLine\n      line: {},\n      line_opitions: {},\n      // ChartPie\n      pie: {},\n      pie_opitions: {},\n\n      // surface_line\n      surface_line: {},\n\n      // Doughnut\n      doughnut: {},\n      doughnut_options: {},\n\n      // BubbleChart\n      bubble: {},\n\n      // original graph\n      original_datasets: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"#000000\",\n          },\n        ],\n      },\n      original_prop_data: {\n        label: \"\",\n        backgroundColor: \"\",\n        backgroundColor01: {\n          red: 0,\n          green: 0,\n          blue: 0,\n        },\n      },\n\n      // 時系列線グラフ\n      ob_json: [\n        {\n          name: \"うみログ1111\",\n          data: [\n            { x: \"2021/09/01 00:23:00\", y: 20.0 },\n            { x: \"2021/09/01 01:30:00\", y: 40.2 },\n            { x: \"2021/09/01 02:40:00\", y: 23.4 },\n            { x: \"2021/09/01 03:10:00\", y: 34.2 },\n            { x: \"2021/09/01 04:00:00\", y: 55.6 },\n            { x: \"2021/09/01 05:49:00\", y: 56.3 },\n            { x: \"2021/09/01 06:30:00\", y: 46.5 },\n            { x: \"2021/09/01 07:53:00\", y: 43.2 },\n            { x: \"2021/09/01 09:20:00\", y: 45.4 },\n            { x: \"2021/09/01 10:09:00\", y: 55 },\n            { x: \"2021/09/01 12:33:00\", y: 75 },\n            { x: \"2021/09/01 14:02:00\", y: 65 },\n            { x: \"2021/09/01 14:24:00\", y: 81 },\n            { x: \"2021/09/01 15:34:00\", y: 50 },\n          ],\n        }\n      ],\n      line_ob_options: {},\n      line_ob: {},\n      begin_time: '00:00:00',\n      end_time: '23:00:00'\n    };\n  },\n  // =====================================================\n  mounted() {\n    this.fillData();\n    this.updateBarData();\n    this.updateLineData();\n    this.updateBarlineData();\n    this.updatePieData();\n    this.updateDoughnutData();\n    this.updateSurfaceLineData();\n    this.updateBubbleData();\n\n    this.updateLineObData();\n  },\n  // =====================================================\n  methods: {\n    fillData() {\n      this.test_chart01.datacollection = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Data One\",\n            backgroundColor: \"#f87979\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            yAxisID: \"y-axis-2\",\n          },\n          {\n            label: \"Data Two\",\n            backgroundColor: \"#429853\",\n            data: [\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n              this.getRandomInt02(200),\n            ],\n            yAxisID: \"y-axis-1\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateBarData() {\n      this.bar = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"rgba(255, 99, 132, 0.8)\",\n          },\n        ],\n      };\n    }, // ************************************\n    updateBarlineData() {\n      this.bar_line = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            type: \"line\",\n            label: \"予算\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            borderColor: \"rgba(0, 191, 255, 0.5)\",\n            // tension: 0,\n            fill: false,\n          },\n          {\n            label: \"売上\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"rgba(255, 228, 181, 0.5)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateLineData() {\n      this.line = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"潮位\",\n            data: [\n              this.getRandomInt(),\n              null,\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            borderColor: \"rgba(0, 191, 255)\",\n            backgroundColor: \"rgba(224, 255, 255, 0.5)\",\n            pointBackgroundColor: \"rgba(0, 0, 240)\",\n            pointHoverBorderColor: \"rgba(0, 191, 255)\",\n            pointHoverBackgroundColor: \"rgba(224, 255, 255, 0.5)\",\n            spanGaps: true,\n          },\n          {\n            label: \"海苔網\",\n            data: [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n            borderColor: \"rgba(50, 205, 50)\",\n            backgroundColor: \"rgba(0,0,0,0)\",\n            pointBackgroundColor: \"rgba(50, 205, 50)\",\n            pointRadius: 0,\n            pointHoverBorderColor: \"rgba(50, 205, 50)\",\n            pointHoverBackgroundColor: \"rgba(0,0,0,0)\",\n            spanGaps: true,\n          },\n        ],\n      };\n      this.line_opitions = {\n        scales: {\n          xAxes: [\n            {\n              scaleLabel: {\n                display: true,\n                labelString: \"Month\",\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 10,\n              },\n            },\n          ],\n        },\n        elements: {\n          line: {\n            // tension: 0, // ベジェ曲線を無効にする\n          },\n        },\n      };\n    },\n    // ************************************\n    updateOriginalLineData() {\n      this.original_datasets = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: this.original_prop_data.label,\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: this.original_prop_data.backgroundColor,\n            borderColor: `rgba(${this.original_prop_data.backgroundColor01.red}, ${this.original_prop_data.backgroundColor01.green}, ${this.original_prop_data.backgroundColor01.blue})`,\n            borderWidth: 3,\n          },\n        ],\n      };\n    },\n    // ************************************\n    updatePieData() {\n      this.pie = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: \"rgba(255, 99, 132, 0.8)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateDoughnutData() {\n      (this.doughnut = {\n        labels: [\"A\", \"B\", \"C\", \"D\"],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n              this.getRandomInt(),\n            ],\n            backgroundColor: [\"orange\", \"skyblue\", \"yellow\", \"hotpink\"],\n          },\n        ],\n      }),\n        (this.doughnut_options = {\n          animation: {},\n        });\n    },\n    // ************************************\n    updateBubbleData() {\n      this.bubble = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          {\n            label: \"Count\",\n            data: [\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n              {\n                x: this.getRandomInt(),\n                y: this.getRandomInt(),\n                r: this.getRandomInt(),\n              },\n            ],\n            backgroundColor: \"rgba(255, 99, 132, 0.8)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateSurfaceLineData() {\n      this.surface_line = {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ],\n        datasets: [\n          //データセット0 設定\n          {\n            fill: \"origin\", //'origin'まで塗る\n            label: \"商品A\",\n            data: [\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n              this.getRandomInt02(0),\n            ],\n            lineTension: 0,\n            borderColor: \"rgba(199,21,133,1)\", //ミディアムバイオレット\n            backgroundColor: \"rgba(199,21,133,0.5)\",\n          },\n          // データセット1 設定\n          {\n            fill: 0, // データセット0まで塗る\n            label: \"商品B\",\n            data: [\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n              this.getRandomInt02(15),\n            ],\n            lineTension: 0,\n            borderColor: \"rgba(255,243,82,1)\", //レモンイエロー\n            backgroundColor: \"rgba(255,243,82,0.5)\",\n          },\n          // データセット2 設定\n          {\n            fill: 1, // データセット1sまで塗る\n            label: \"商品C\",\n            data: [\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n              this.getRandomInt02(26),\n            ],\n            lineTension: 0,\n            borderColor: \"rgba(0,172,154,1)\", //ペパーミントグリーン\n            backgroundColor: \"rgba(0,172,154,0.5)\",\n          },\n        ],\n      };\n    },\n    // ************************************\n    updateLineObData() {\n        console.log('change_time')\n        console.log(this.ob_json[0].data,)\n        console.log(typeof(this.ob_json[0].data[0]), typeof(this.ob_json[0].data[0].x), typeof(this.ob_json[0].data[0].y))\n        console.log(this.begin_time, this.end_time)\n        this.line_ob = {\n            datasets: [{\n                label: this.ob_json[0].name,\n                data: this.ob_json[0].data,\n                fill: false,\n            }]\n        };\n        let tmp = {\n            //凡例は非表示\n            legend: {\n                display: false\n            },\n            scales: {\n                //X軸\n                xAxes: [{\n                    //軸ラベル表示\n                    scaleLabel: {\n                        display: true,\n                        labelString: '時間'\n                    },\n                    //ここで軸を時間を設定する\n                    type: 'time',\n                    time: {\n                        parser: 'yyyy/mm/dd HH:mm:ss',\n                        unit: 'hour',\n                        stepSize: 1,\n                        displayFormats: {\n                            'hour': 'HH:mm'\n                        }\n                    },\n                    //X軸の範囲を指定\n                    ticks: {\n                        min: this.begin_time,\n                        max: this.end_time\n                    }\n                }],\n                //Y軸\n                yAxes: [{\n                    //軸ラベル表示\n                    scaleLabel: {\n                        display: true,\n                        labelString: '体温'\n                    },\n                    //Y軸の範囲を指定\n                    ticks: {\n                        min: 10.0,\n                        max: 100.0\n                    }\n                }]\n            },\n            title: {\n                display: true, // タイトルを表示する\n                text: this.ob_json[0].name + \"\\n\" +  this.ob_json[0].data[0].x.slice(0, 11) // タイトルのテキスト\n            }\n        }\n        this.line_ob_options = Object.assign({}, tmp)\n    },\n    // ************************************\n    // 乱数生成\n    getRandomInt() {\n      return Math.floor(Math.random() * (50 - 5 + 1)) + 5;\n    },\n    // ************************************\n    // 乱数生成\n    getRandomInt02(b) {\n      return Math.floor(Math.random() * 10) + b;\n    },\n  },\n};\n</script>"]}]}